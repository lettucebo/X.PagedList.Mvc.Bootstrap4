# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
  branches:
    include:
      - refs/tags/*

pool:
  vmImage: "windows-latest"

variables:
  solution: "**/*.sln"
  buildPlatform: "Any CPU"
  buildConfiguration: "Release"

stages:
  - stage: Build
    displayName: Build nuget package
    jobs:
      - job: Build
        displayName: Build
        pool:
          vmImage: "windows-latest"

        steps:
          - task: DotNetCoreCLI@2
            displayName: Restore
            inputs:
              command: "restore"
              projects: "**/*.csproj"

          - task: DotNetCoreCLI@2
            displayName: Build
            inputs:
              command: "build"
              projects: 'src/X.Web.PagedList.Bootstrap4\X.Web.PagedList.Bootstrap4.csproj'
              arguments: "--configuration $(BuildConfiguration)"

          - task: NuGetToolInstaller@1
            displayName: "Use NuGet 5.x.x"
            inputs:
              versionSpec: "5.x.x"

          - task: NuGetCommand@2
            displayName: "NuGet pack X.Web.PagedList.Bootstrap4"
            inputs:
              command: "pack"
              packagesToPack: 'src/X.Web.PagedList.Bootstrap4\X.Web.PagedList.Bootstrap4.csproj'
              includeSymbols: true

          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: "$(Build.ArtifactStagingDirectory)"
              ArtifactName: "drop"
              publishLocation: "Container"

  - stage: Deploy
    displayName: Deploy stage
    dependsOn: Build
    condition: succeeded()
    jobs:
      - deployment: Deploy
        displayName: Deploy To Nuget.org
        environment: "XPagedListMvcBootstrap4"
        pool:
          vmImage: "ubuntu-latest"
        strategy:
          runOnce:
            deploy:
              steps:
                - task: DownloadBuildArtifacts@0
                  inputs:
                    buildType: "current"
                    downloadType: "single"
                    artifactName: "drop"
                    downloadPath: "$(System.ArtifactsDirectory)"

                - task: NuGetCommand@2
                  inputs:
                    command: "push"
                    packagesToPush: "$(System.ArtifactsDirectory)/**/*.nupkg;!$(System.ArtifactsDirectory)/**/*.symbols.nupkg"
                    nuGetFeedType: "external"
                    publishFeedCredentials: "Nuget.org"
